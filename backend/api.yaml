openapi: 3.0.0
info:
  title: API Documentation
  description: Comprehensive API documentation
  version: 1.0.0
servers:
  - url: http://localhost:3000/api
    description: Local development server
security:
  - bearerAuth: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
        role:
          type: string
    Category:
      type: object
      properties:
        name:
          type: string

paths:
  /auth/register:
    post:
      summary: Register a new user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        201:
          description: User registered successfully
  /auth/login:
    post:
      summary: Login a user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: User logged in successfully
  /auth/logout:
    post:
      summary: Logout a user
      tags:
        - Authentication
      security:
        - bearerAuth: []
      responses:
        200:
          description: User logged out successfully
  /users:
    post:
      summary: Create a new user
      tags:
        - Users
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        201:
          description: User created successfully
    get:
      summary: Get all users
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        200:
          description: A list of users
  /users/{userId}:
    get:
      summary: Get a user by ID
      tags:
        - Users
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: User details
    put:
      summary: Update a user
      tags:
        - Users
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        200:
          description: User updated successfully
    delete:
      summary: Delete a user
      tags:
        - Users
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        204:
          description: User deleted successfully
  /categories:
    post:
      summary: Create a category
      tags:
        - Categories
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        201:
          description: Category created successfully
    get:
      summary: Get all categories
      tags:
        - Categories
      security:
        - bearerAuth: []
      responses:
        200:
          description: A list of categories
  /categories/{categoryId}:
    get:
      summary: Get a category by ID
      tags:
        - Categories
      security:
        - bearerAuth: []
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Category details
    put:
      summary: Update a category
      tags:
        - Categories
      security:
        - bearerAuth: []
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        200:
          description: Category updated successfully
    delete:
      summary: Delete a category
      tags:
        - Categories
      security:
        - bearerAuth: []
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: string
      responses:
        204:
          description: Category deleted successfully